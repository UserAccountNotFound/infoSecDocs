stages:
  - deploy

variables:
  # Настройки SSH
  SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY  # Приватный ключ для подключения по SSH (добавьте в Variables в GitLab)
  REMOTE_HOST: "shiki@172.21.32.25"    # Удалённый хост (логин@хост)
  SSH_PORT: "22"  # Порт SSH 
  REMOTE_PATH: "/srv/www/infosec.esu.gsp.local" # Путь на удалённом хосте, куда копировать

cache:
  paths:
    - public/

deploy_to_APP-01:
  stage: deploy
  #only:
  #  changes:
  #    - public/**/*  # Триггер только при изменениях в папке public
  when: manual
  before_script:
    - apk update && apk add openssh-client  # Установка SSH-клиента
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519_app-01
    - chmod 600 ~/.ssh/id_ed25519_app-01
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_ed25519_app-01  # Добавляем ключ в SSH-клиент    
    - 'which ssh-keyscan || (echo "ssh-keyscan not found!" && exit 1)'
    - ssh-keyscan -p $SSH_PORT -H ${REMOTE_HOST#*@} >> ~/.ssh/known_hosts # Добавляем хост в known_hosts
  script:
    - echo "Проверка SSH соединения..."
    - ssh -T -v -p $SSH_PORT $REMOTE_HOST "echo 'SSH SSH соединение установлено!'" || true
    - echo "Начинаем копирование..."
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -r public/* $REMOTE_HOST:$REMOTE_PATH || exit 1
    - echo "Файлы успешно скопированы!"
  after_script:
    - rm -f ~/.ssh/id_ed25519_app-01 # Удаляем ключ после использования
